name: Build production and nightly artifacts
on:
    push:
        branches:
            - main
        tags:
            - v*
    workflow_dispatch:
    schedule:
        # Every week on Sunday at midnight
        - cron: '0 0 * * 0'
env:
    TYPE_OF_BUILD: 'production'
    ENV_ARTIFACT_NAME: ''
    GITHUB_SHA: ${{ github.sha }}
jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Setup build type - nightly
              if: github.event_name == 'schedule'
              env:
                  TYPE_OF_BUILD: 'nightly'
              run: |
                  echo "ENV_ARTIFACT_NAME=$TYPE_OF_BUILD" >> $GITHUB_ENV
                  echo "TYPE_OF_BUILD=$TYPE_OF_BUILD" >> $GITHUB_ENV
                  echo "Scheduled build"
            - name: Setup build type - production
              if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
              env:
                  TYPE_OF_BUILD: 'development'
              run: |
                  echo "ENV_ARTIFACT_NAME=$TYPE_OF_BUILD" >> $GITHUB_ENV
                  echo "TYPE_OF_BUILD=$TYPE_OF_BUILD" >> $GITHUB_ENV
                  echo "Pushed to main branch or manual dispatch - development build"
            - name: Setup build type - release
              if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
              env:
                  TYPE_OF_BUILD: 'release'
              run: |
                  echo "ENV_ARTIFACT_NAME=$TYPE_OF_BUILD" >> $GITHUB_ENV
                  echo "TYPE_OF_BUILD=$TYPE_OF_BUILD" >> $GITHUB_ENV
                  echo "Pushed a tag - release build"
            - name: Setup PHP with PECL extension
              uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.4'
                  extensions: mbstring, intl, gd, pdo_mysql, zip, exif, pcntl, bcmath, soap, imagick, xdebug, opcache, imagick
                  tools: composer:v2
            - name: Install Composer dependencies
              run: composer install --no-interaction --prefer-dist --optimize-autoloader
            - name: Install NPM modules
              uses: actions/setup-node@v4
              with:
                  node-version: 22
            - run: |
                  npm install --no-audit
            - name: Build frontend (Vite)
              run: |
                  npm run build
            - name: Remove unnecessary files (dev dependencies, tests, etc.) and optimize autoloader
              run: |
                  composer install --no-dev --optimize-autoloader --no-interaction --prefer-dist
                  npm install --production --no-audit
                  rm -rf .git .github .gitignore .gitattributes .editorconfig tailwind.config.js .env .eslintrc.cjs .prettierignore .prettierrc.json .jsconfig.json phpunit.xml version crowdin.yml install.lock postcss.config.js eslint.config.js sonar-project.properties
            - name: Upload artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ env.ENV_ARTIFACT_NAME }}
                  include-hidden-files: true # Include hidden files in the artifact (fix for .env .gitignore ...)
                  path: ${{ github.workspace }}/
    release:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Download artifacts
              uses: actions/download-artifact@v4
              with:
                  name: production
            - name: Create release
              if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
              uses: ncipollo/release-action@v1
              with:
                  allowUpdates: true
                  artifacts: ${{ github.workspace }}/release.zip
                  name: ${{ github.ref_name }}
                  draft: true
                  tag: ${{ github.ref_name }}
                  prerelease: false
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Create nightly release
              if: github.event_name == 'schedule'
              uses: ncipollo/release-action@v1
              with:
                  tag: nightly-${{ github.run_id }}
                  allowUpdates: true
                  name: BiznisBox Nightly Build
                  artifacts: ${{ github.workspace }}/nightly.zip
                  draft: true
                  body: |
                      This is a nightly build of BiznisBox.
                      It includes the latest changes from the main branch.
            - name: Create dev release
              if: github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/'))
              uses: ncipollo/release-action@v1
              with:
                  tag: dev
                  allowUpdates: true
                  name: BiznisBox Dev Build
                  artifacts: ${{ github.workspace }}/development.zip
                  draft: true
                  body: |
                      This is a development build of BiznisBox.
                      It includes the latest changes from the main branch.
            - name: Notify about the build
              run: |
                  echo "Build completed successfully!"
                  echo "Build Type: ${{ env.TYPE_OF_BUILD }}"
                  echo "Artifact Name: ${{ env.ENV_ARTIFACT_NAME }}"
                  echo "SHA: ${{ github.sha }}"
